---
- name: Install tools required in builders
  hosts: builders
  become: true
  gather_facts: true

  vars:
    # renovate: datasource=golang-version depName=golang
    go_version: "1.24.5"
    go_base_url: "https://go.dev/dl"

  pre_tasks:
    - name: Set Go OS and ARCH
      ansible.builtin.set_fact:
        go_os: "{{ ansible_system | lower }}"
        go_arch: |-
          {% if ansible_architecture in ['x86_64', 'amd64'] %}amd64{% elif ansible_architecture in ['aarch64', 'arm64'] %}arm64{% endif %}

    - name: Set Go filename
      ansible.builtin.set_fact:
        go_filename: "go{{ go_version }}.{{ go_os }}-{{ go_arch }}.tar.gz"

    - name: Fetch Go release data
      ansible.builtin.uri:
        url: "https://go.dev/dl/?mode=json&include={{ go_version }}"
        return_content: true
      register: go_dl_json

    - name: Extract matching release info
      set_fact:
        go_release: "{{ go_dl_json.json | selectattr('version', 'equalto', 'go' + go_version) | list | first }}"

    - name: Extract matching file entry
      set_fact:
        go_file_entry: "{{ go_release.files | selectattr('filename', 'equalto', go_filename) | list | first }}"

    - name: Extract checksum from file entry
      ansible.builtin.set_fact:
        go_checksum: "{{ go_file_entry.sha256 }}"

    - name: Debug SHA256 content
      ansible.builtin.debug:
        msg: "Checksum for {{ go_filename }} is {{ go_checksum }}"

  roles:
    - geerlingguy.docker
    - geerlingguy.go

  tasks:
    - name: Get Ubuntu codename
      ansible.builtin.command: lsb_release -cs
      register: ubuntu_codename
      changed_when: false

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: true

    - name: Install cockpit and related packages from backports
      ansible.builtin.apt:
        name:
          - cockpit
          - cockpit-machines
          - cockpit-packagekit
        default_release: "{{ ubuntu_codename.stdout }}-backports"
        state: present

    - name: Install core packages
      ansible.builtin.apt:
        name:
          - bsdtar
          - git
          - libarchive-tools
          - make
          - socat
          - stow
          - unzip
          - zsh
        state: present

    - name: Install monitoring tools
      ansible.builtin.apt:
        name:
          - prometheus-node-exporter
          - prometheus-node-exporter-collectors
        state: present

- name: Install GitHub CLI
  hosts: builders
  become: true
  tasks:
    - name: Ensure wget is installed
      ansible.builtin.apt:
        name: wget
        state: present
        update_cache: yes

    - name: Ensure /etc/apt/keyrings directory exists
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Download GitHub CLI GPG key
      ansible.builtin.get_url:
        url: https://cli.github.com/packages/githubcli-archive-keyring.gpg
        dest: /etc/apt/keyrings/githubcli-archive-keyring.gpg
        mode: '0644'

    - name: Ensure /etc/apt/sources.list.d directory exists
      ansible.builtin.file:
        path: /etc/apt/sources.list.d
        state: directory
        mode: '0755'

    - name: Add GitHub CLI APT repository
      ansible.builtin.apt_repository:
        repo: "deb [arch={{ ansible_architecture | lower }} signed-by=/etc/apt/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main"
        filename: github-cli
        state: present
        update_cache: yes

    - name: Install gh (GitHub CLI)
      ansible.builtin.apt:
        name: gh
        state: present

- name: Prepare user env
  hosts: builders
  become: false
  gather_facts: true

  tasks:
    - name: Configure global git
      ansible.builtin.shell:
        cmd: git config --global --add safe.directory '*'

    - name: Install posh
      ansible.builtin.shell:
        cmd: curl -s https://ohmyposh.dev/install.sh | bash -s
        chdir: "/home/{{ ansible_user }}"

    - name: Install ohmyzsh
      ansible.builtin.git:
        repo: https://github.com/ohmyzsh/ohmyzsh.git
        dest: "/home/{{ ansible_user }}/.ohmyzsh"
        force: true

    - name: Clone dotfiles
      ansible.builtin.git:
        repo: https://github.com/{{ ansible_user }}/dotfiles.git
        dest: "/home/{{ ansible_user }}/dotfiles"
        force: true

    - name: Remove .zshrc directory
      ansible.builtin.file:
        path: "/home/{{ ansible_user }}/.zshrc"
        state: absent

    - name: Install dotfiles
      ansible.builtin.shell:
        cmd: stow .
        chdir: "/home/{{ ansible_user }}/dotfiles"

- name: Set shell for user
  hosts: builders
  become: true
  gather_facts: true

  tasks:
    - name: Set default shell to zsh
      ansible.builtin.user:
        name: "{{ ansible_user }}"
        shell: /usr/bin/zsh
