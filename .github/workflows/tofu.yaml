name: tofu

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  workflow_dispatch:
    inputs:
      extra_args_oci:
        description: "Extra flags for the OCI Tofu apply/plan"
        required: false
        default: ""
      extra_args_gcloud:
        description: "Extra flags for the GCloud Tofu apply/plan"
        required: false
        default: ""
  schedule:
    - cron: "0 4 * * *"

permissions:
  pull-requests: write
  contents: read

concurrency:
  group: ${{ github.workflow }}

jobs:
  oci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: opentofu/setup-opentofu@v1
      - env:
          PG_CONN_STR: ${{ secrets.PG_CONN_STR }}
          TF_VAR_fingerprint: ${{ secrets.OCI_FINGERPRINT }}
          TF_VAR_private_key: ${{ secrets.OCI_PEM_PRV }}
          TF_VAR_ssh_public_keys: ${{ secrets.SSH_PUB_KEY }}
          TF_VAR_tailscale_oauth_client_id: ${{ secrets.TAILSCALE_OAUTH_CLIENT_ID }}
          TF_VAR_tailscale_oauth_secret: ${{ secrets.TAILSCALE_OAUTH_SECRET }}
          TF_VAR_tailscale_tailnet: ${{ secrets.TAILSCALE_TAILNET }}
          TF_VAR_tenancy_ocid: ${{ secrets.OCI_TENANCY_OCID }}
          TF_VAR_user_ocid: ${{ secrets.OCI_USER_OCID }}
          TF_VAR_discord_webhook: ${{ secrets.DISCORD_WEBHOOK_SYSTEMS }}
        run: |
          tofu -chdir=./terraform/oci init -upgrade
      - if: github.event_name == 'pull_request'
        id: plan
        env:
          PG_CONN_STR: ${{ secrets.PG_CONN_STR }}
          TF_VAR_fingerprint: ${{ secrets.OCI_FINGERPRINT }}
          TF_VAR_private_key: ${{ secrets.OCI_PEM_PRV }}
          TF_VAR_ssh_public_keys: ${{ secrets.SSH_PUB_KEY }}
          TF_VAR_tailscale_oauth_client_id: ${{ secrets.TAILSCALE_OAUTH_CLIENT_ID }}
          TF_VAR_tailscale_oauth_secret: ${{ secrets.TAILSCALE_OAUTH_SECRET }}
          TF_VAR_tailscale_tailnet: ${{ secrets.TAILSCALE_TAILNET }}
          TF_VAR_tenancy_ocid: ${{ secrets.OCI_TENANCY_OCID }}
          TF_VAR_user_ocid: ${{ secrets.OCI_USER_OCID }}
          TF_VAR_discord_webhook: ${{ secrets.DISCORD_WEBHOOK_SYSTEMS }}
        run: |
          ARGS="${{ github.event.inputs.extra_args_oci }}"
          tofu -chdir=./terraform/oci plan -input=false -no-color \
            ${ARGS:+$ARGS}
      - if: github.event_name != 'pull_request'
        env:
          PG_CONN_STR: ${{ secrets.PG_CONN_STR }}
          TF_VAR_fingerprint: ${{ secrets.OCI_FINGERPRINT }}
          TF_VAR_private_key: ${{ secrets.OCI_PEM_PRV }}
          TF_VAR_ssh_public_keys: ${{ secrets.SSH_PUB_KEY }}
          TF_VAR_tailscale_oauth_client_id: ${{ secrets.TAILSCALE_OAUTH_CLIENT_ID }}
          TF_VAR_tailscale_oauth_secret: ${{ secrets.TAILSCALE_OAUTH_SECRET }}
          TF_VAR_tailscale_tailnet: ${{ secrets.TAILSCALE_TAILNET }}
          TF_VAR_tenancy_ocid: ${{ secrets.OCI_TENANCY_OCID }}
          TF_VAR_user_ocid: ${{ secrets.OCI_USER_OCID }}
          TF_VAR_discord_webhook: ${{ secrets.DISCORD_WEBHOOK_SYSTEMS }}
        run: |
          ARGS="${{ github.event.inputs.extra_args_oci }}"
          tofu -chdir=./terraform/oci \
            apply -auto-approve -input=false -lock=true -no-color \
            ${ARGS:+$ARGS}

  gcloud:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: opentofu/setup-opentofu@v1
      - run: |
          echo '${{ secrets.GOOGLE_CREDENTIALS }}' > /dev/shm/credentials.json
      - env:
          GOOGLE_APPLICATION_CREDENTIALS: /dev/shm/credentials.json
          PG_CONN_STR: ${{ secrets.PG_CONN_STR }}
          TF_VAR_project_id: ${{ secrets.GOOGLE_PROJECT_ID }}
          TF_VAR_discord_webhook: ${{ secrets.DISCORD_WEBHOOK_SYSTEMS }}
          TF_VAR_ssh_public_keys: ${{ secrets.SSH_PUB_KEY }}
        run: |
          tofu -chdir=./terraform/gcloud init -upgrade
      - if: github.event_name == 'pull_request'
        id: plan
        env:
          GOOGLE_APPLICATION_CREDENTIALS: /dev/shm/credentials.json
          PG_CONN_STR: ${{ secrets.PG_CONN_STR }}
          TF_VAR_project_id: ${{ secrets.GOOGLE_PROJECT_ID }}
          TF_VAR_discord_webhook: ${{ secrets.DISCORD_WEBHOOK_SYSTEMS }}
          TF_VAR_ssh_public_keys: ${{ secrets.SSH_PUB_KEY }}
        run: |
          ARGS="${{ github.event.inputs.extra_args_gcloud }}"
          tofu -chdir=./terraform/gcloud plan -input=false -no-color \
            ${ARGS:+$ARGS}
      - if: github.event_name != 'pull_request'
        env:
          GOOGLE_APPLICATION_CREDENTIALS: /dev/shm/credentials.json
          PG_CONN_STR: ${{ secrets.PG_CONN_STR }}
          TF_VAR_project_id: ${{ secrets.GOOGLE_PROJECT_ID }}
          TF_VAR_discord_webhook: ${{ secrets.DISCORD_WEBHOOK_SYSTEMS }}
          TF_VAR_ssh_public_keys: ${{ secrets.SSH_PUB_KEY }}
        run: |
          ARGS="${{ github.event.inputs.extra_args_gcloud }}"
          tofu -chdir=./terraform/gcloud \
            apply -auto-approve -input=false -lock=true -no-color \
            ${ARGS:+$ARGS}
      - if: always()
        run: |
          rm -f /dev/shm/credentials.json
