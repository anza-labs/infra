#cloud-config

write_files:
  - path: /var/lib/k3s/docker-compose.yml
    permissions: 0644
    owner: root
    content: |
      version: '3.8'
      services:
        tailscale:
          image: tailscale/tailscale:${tailscale_version}
          hostname: ${hostname}
          restart: always
          environment:
            TS_AUTHKEY: "${tailscale_key}"
            TS_STATE_DIR: /var/lib/tailscale
            TS_USERSPACE: 'false'
          volumes:
            - /tailscale/state:/var/lib/tailscale
          devices:
            - /dev/net/tun:/dev/net/tun
          cap_add:
            - net_admin
        k3s:
          image: rancher/k3s:${k3s_version}
          container_name: k3s
          depends_on:
            - tailscale
          network_mode: service:tailscale
          restart: always
          volumes:
            - /dev:/dev
            - /etc:/etc
            - /lib/modules:/lib/modules
            - /var/run:/var/run
            - /var/lib/rancher:/var/lib/rancher
          command:
            - server
            - --disable=traefik
            - --container-runtime-endpoint=/var/run/containerd/containerd.sock

  - path: /etc/systemd/system/k3s-container.service
    permissions: 0644
    owner: root
    content: |
      [Unit]
      Description=Run K3s using Docker Compose
      After=docker.service
      Requires=docker.service

      [Service]
      WorkingDirectory=/var/lib/k3s
      ExecStartPre=/usr/bin/docker compose down
      ExecStart=/usr/bin/docker compose up
      ExecStop=/usr/bin/docker compose down
      Restart=always
      RestartSec=5

      [Install]
      WantedBy=multi-user.target

runcmd:
  - echo "[*] Enabling K3s container systemd service..."
  - systemctl daemon-reexec
  - systemctl daemon-reload
  - systemctl enable k3s-container.service
  - systemctl start k3s-container.service
  - |
    for i in $(seq 1 30); do
      [ -f /etc/rancher/k3s/k3s.yaml ] && break
      sleep 2
    done
  - echo "[*] Sending kubeconfig to Discord webhook..."
  - |
    if [ -f /etc/rancher/k3s/k3s.yaml ]; then
      curl -s -X POST "${discord_webhook}" \
        -F "file1=@/etc/rancher/k3s/k3s.yaml;type=text/yaml;filename=kubeconfig.yaml" \
        -F 'payload_json={"content":"üì¶ K3s kubeconfig from '"$(hostname)"'"}'
    else
      curl -s -X POST "${discord_webhook}" \
        -F 'payload_json={"content":"‚ùå k3s.yaml not found on '"$(hostname)"'"}'
    fi
